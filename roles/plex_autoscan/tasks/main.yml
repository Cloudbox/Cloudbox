#########################################################################
# Title:         Cloudbox: Plex Autoscan Role                           #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check if plex_autoscan.service exists
  stat:
    path: "/etc/systemd/system/plex_autoscan.service"
  register: plex_autoscan_service

- name: Service Tasks
  block:

  - name: Populate Service Facts
    service_facts:

  - name: Get plex_autoscan service state
    set_fact:
      plex_autoscan_service_running: "{{ (services['plex_autoscan.service'] is defined) and (services['plex_autoscan.service']['state'] == 'running') }}"

  - name: Stop plex_autoscan service
    systemd:
      name: plex_autoscan
      state: stopped
    when: plex_autoscan_service_running

  when: plex_autoscan_service.stat.exists

- name: Create plex_autoscan directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - /opt/plex_autoscan

- name: Clone plex_autoscan
  git:
    repo: https://github.com/l3uddz/plex_autoscan/
    dest: /opt/plex_autoscan
    version: master
    force: yes
  become: yes
  become_user: "{{user}}"

- name: Install pip requirements
  pip:
    requirements: /opt/plex_autoscan/requirements.txt
    executable: pip2

- name: Check config exists
  stat:
    path: "/opt/plex_autoscan/config/config.json"
  register: plex_autoscan_config

- name: Do following tasks when config does not exist
  block:

  - name: Import Plex Auth Token role
    import_role:
      name: plex_auth_token
    when: plex_account_enabled

  - name: "Generate 32 character SERVER_PASS"
    shell: "pwgen 32 1"
    register: plex_autoscan_pass

  - name: Import default config
    template:
      src: config.json.js2
      dest: /opt/plex_autoscan/config/config.json
      owner: "{{user}}"
      group: "{{user}}"
      mode: 0775
      force: yes

  when: not plex_autoscan_config.stat.exists

- name: Set scan.py as executable
  file:
    path: /opt/plex_autoscan/scan.py
    owner: "{{user}}"
    group: "{{user}}"
    mode: a+x

- name: Import plex_autoscan service
  template:
    src: plex_autoscan.service.js2
    dest: /etc/systemd/system/plex_autoscan.service
    force: yes
  when: not plex_autoscan_service.stat.exists

- name: Start plex_autoscan service
  systemd:
    state: started
    name: plex_autoscan
    daemon_reload: yes
    enabled: yes

- name: Update config.json
  command: "/opt/plex_autoscan/scan.py sections"
  become: yes
  become_user: "{{user}}"
  ignore_errors: yes
  tags: plex_autoscan_update_sections

- name: Configure PLEX_SECTION_PATH_MAPPINGS
  command: "/opt/plex_autoscan/scan.py update_sections"
  become: yes
  become_user: "{{user}}"
  ignore_errors: yes
  tags: plex_autoscan_update_sections
