#########################################################################
# Title:         Cloudbox: Nginx-Proxy Role                             #
# Author(s):     l3uddz                                                 #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Images: jwilder/nginx-proxy                                    #
#                jrcs/letsencrypt-nginx-proxy-companion                 #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Stop and remove any existing container
  docker_container:
    name: nginx-proxy
    state: absent

- name: Stop and remove any existing letsencrypt container
  docker_container:
    name: letsencrypt
    state: absent

# BEGIN - Certs Sub-Folder Migration Tasks
- name: Check if 'nginx_proxy' folder exists
  stat:
    path: /opt/nginx-proxy
  register: nginx_proxy_folder

- name: Check if 'certs' subfolder exists
  stat:
    path: /opt/nginx-proxy/certs
  register: certs_folder

- name: Move existing certs into a 'certs' subfolder
  shell: |
    rm -rf /tmp/cb_certs
    mv /opt/nginx-proxy /tmp/cb_certs
    mkdir /opt/nginx-proxy
    mv /tmp/cb_certs /opt/nginx-proxy/certs
    mv /opt/nginx-proxy/certs/htpasswd /opt/nginx-proxy/htpasswd
    mv /opt/nginx-proxy/certs/vhost.d /opt/nginx-proxy/vhost.d
    mv /opt/nginx-proxy/certs/proxy.conf /opt/nginx-proxy/proxy.conf
    chown -R {{user}}:{{user}} /opt/nginx-proxy/
    chmod -R 775 /opt/nginx-proxy/
  when: (nginx_proxy_folder.stat.exists) and not (certs_folder.stat.exists)
# END - Certs Sub-Folder Migration Tasks

- name: Create nginx-proxy directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - /opt/nginx-proxy
    - /opt/nginx-proxy/certs
    - /opt/nginx-proxy/htpasswd
    - /opt/nginx-proxy/vhost.d

- name: Check if 'proxy.conf' file exists
  stat:
    path: "/opt/nginx-proxy/proxy.conf"
  register: proxy_conf

- name: "Delete 'proxy.conf' if link or a folder"
  file:
    path: "/opt/nginx-proxy/proxy.conf"
    state: absent
  when:  (proxy_conf.stat.exists) and ((proxy_conf.stat.islnk) or (proxy_conf.stat.isdir))

- name: Import 'proxy.conf'
  copy:
    src: "proxy.conf"
    dest: "/opt/nginx-proxy/proxy.conf"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: (not proxy_conf.stat.exists) or ((proxy_conf.stat.exists) and ((proxy_conf.stat.islnk) or (proxy_conf.stat.isdir)))

- name: Create and start container
  docker_container:
    name: nginx-proxy
    image: "jwilder/nginx-proxy"
    pull: yes
    published_ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy/certs:/etc/nginx/certs:ro"
      - "/opt/nginx-proxy/vhost.d:/etc/nginx/vhost.d:rw"
      - "/opt/nginx-proxy/htpasswd:/etc/nginx/htpasswd:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/usr/share/nginx/html"
      - "/opt/nginx-proxy/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro"
    labels:
      "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy": "true"
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - nginx-proxy
    purge_networks: yes
    restart_policy: unless-stopped
    state: started

- name: Create and start letsencrypt container
  docker_container:
    name: letsencrypt
    image: "jrcs/letsencrypt-nginx-proxy-companion"
    pull: yes
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy/certs:/etc/nginx/certs:rw"
      - "/opt/nginx-proxy/vhost.d:/etc/nginx/vhost.d:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
    env:
      FILES_UID: "{{uid}}"
      FILES_GID: "{{gid}}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - letsencrypt
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
