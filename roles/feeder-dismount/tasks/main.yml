#########################################################################
# Title:         Cloudbox: Feeder Dismount Role                         #
# Author(s):     Desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Gathering list of running docker containers"
  shell: "docker ps --format '{{ '{{' }} .Names{{ '}}' }}' | xargs echo -n"
  register: docker_running_containers
  ignore_errors: yes

- name: "Stop running docker containers"
  shell: 'docker stop {{docker_running_containers.stdout}}'
  ignore_errors: yes

- name: Stop unionfs service
  systemd: state=stopped name=unionfs
  ignore_errors: yes

- name: "Force unmount /mnt/unionfs"
  shell: "/bin/umount -f /mnt/unionfs"
  ignore_errors: yes

- name: Check if feeder.service exists in /etc/systemd/system/
  stat:
    path: "/etc/systemd/system/feeder.service"
  register: feeder_service

- name: Stop and disable feeder service
  systemd: name=feeder state=stopped enabled=no
  ignore_errors: yes
  when: feeder_service.stat.exists

- name: "Force unmount of previous /mnt/feeder"
  shell: "/bin/umount -f /mnt/feeder"
  ignore_errors: yes
  when: feeder_service.stat.exists

- name: Remove feeder.service from /etc/systemd/system/
  file: "path={{item}} state=absent"
  with_items:
    - /etc/systemd/system/feeder.service
  when: feeder_service.stat.exists

- name: Check if /mnt/feeder path exists
  stat:
    path: /mnt/feeder
  register: mnt_feeder_path

- name: Remove /mnt/feeder path
  file: "path={{item}} state=absent"
  with_items:
    - /mnt/feeder
  when: mnt_feeder_path.stat.exists

- name: Import standard unionfs.service to /etc/systemd/system/
  template:
    src: unionfs.service.js2
    dest: /etc/systemd/system/unionfs.service
    force: yes

- name: Systemd daemon-reload
  systemd: daemon_reload=yes

- name: Start unionfs service
  systemd: name=unionfs state=started enabled=yes

- name: "Wait for 5 seconds before starting docker containers"
  wait_for:
    timeout: 5

- name: "Start docker containers"
  shell: 'docker start {{docker_running_containers.stdout}}'
  ignore_errors: yes
