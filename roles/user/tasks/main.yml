#########################################################################
# Title:         Cloudbox: User Role                                    #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create common groups
  group: "name={{item}} state=present"
  with_items:
    - docker
    - "{{user}}"

- name: "Create user: {{user}}"
  user:
    name: "{{user}}"
    group: "{{user}}"
    groups: "{{user}},docker,sudo"
    password: "{{ passwd | string | password_hash('sha512') }}"
    update_password: on_create
    append: yes
  register: user_info

- name: "Set 'uid', 'gid', and 'vgid'"
  set_fact:
    uid: "{{ user_info.uid }}"
    gid: "{{ user_info.group }}"
    vgid: "{{ lookup('pipe','getent group video | cut -d: -f3') }}"

- name: Check sudoers exists
  stat:
    path: "/etc/sudoers"
  register: sudoers

- name: Set sudo group to NOPASSWD
  lineinfile:
    path: "/etc/sudoers"
    regexp: '^%sudo\s'
    line: '%sudo   ALL=(ALL) NOPASSWD:ALL'
    state: present
  when: sudoers.stat.exists == True

- name: Create 'cloudbox_folder_path' variable
  set_fact:
    cloudbox_folder_path: "/home/{{user}}/cloudbox"

- name: "Do following tasks when not in the user's cloudbox folder"
  block:

  - name: "Delete previous cloudbox folder if it exists"
    file:
      path: "/home/{{user}}/cloudbox"
      state: absent

  - name: "Get current git branch"
    shell: git rev-parse --abbrev-ref HEAD
    register: git_branch

  - name: "Clone Cloudbox project"
    git:
      repo: "https://github.com/cloudbox/cloudbox"
      dest: "{{cloudbox_folder_path}}/"
      version: "{{git_branch.stdout}}"
      recursive: yes
      force: yes
    become: yes
    become_user: "{{user}}"
    ignore_errors: yes

  - name: "Copy config files to cloudbox folder"
    copy:
      src: "{{item}}"
      dest: "{{cloudbox_folder_path}}/"
      owner: "{{user}}"
      group: "{{user}}"
      force: yes
    with_fileglob:
      - "{{playbook_dir}}/*.yml"
      - "{{playbook_dir}}/*.cfg"
      - "{{playbook_dir}}/*.conf"
      - "{{playbook_dir}}/*.txt"
    ignore_errors: yes

  - name: "Quit playbook after creation of new cloudbox folder location"
    fail:
      msg: "Please re-login with the '{{user}}' account and run the Cloudbox installer from the '{{cloudbox_folder_path}}/' path."

  when: (playbook_dir != cloudbox_folder_path) and not (continuous_integration)

- name: "Reset ownership of '/home/{{user}}/' path"
  file: "path=/home/{{user}} state=directory owner={{user}} group={{user}} recurse=yes"
