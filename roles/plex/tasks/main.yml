---
- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid

- name: Stop and remove any existing container
  docker_container:
    name: plex
    state: absent

- name: Retrieve plex docker image
  docker_image:
    name: "plexinc/pms-docker:{{plex.tag}}"

- name: Check Preferences.xml exists
  stat:
    path: "/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml"
  register: plex_prefs

- name: Check /dev/dri exists
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: Ask user for his plex server claim id
  pause:
    prompt: "To continue the plex installation, you must visit https://plex.tv/claim and retrieve a claim token, paste it below and press enter"
  register: plex_claim
  when: plex_prefs.stat.exists == False

- debug: msg="Using plex claim token {{plex_claim.user_input}}"
  when: plex_prefs.stat.exists == False

- name: Create and start container
  docker_container:
    name: plex
    image: "plexinc/pms-docker:{{plex.tag}}"
    pull: yes
    published_ports:
      - "127.0.0.1:32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "{{uid.stdout}}"
      PLEX_GID: "{{gid.stdout}}"
      PLEX_CLAIM: "{{plex_claim.user_input| default (omit)}}"
      CHANGE_CONFIG_DIR_OWNERSHIP: false
      ADVERTISE_IP: "http://plex.{{domain}}:80/,https://plex.{{domain}}:443/"
      VIRTUAL_HOST: "plex.{{domain}}"
      VIRTUAL_PORT: 32400
      LETSENCRYPT_HOST: "plex.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
      HTTPS_METHOD: noredirect
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/plex:/config"
      - "{{plex.transcodes}}:/transcode"
      - "/mnt/unionfs/Media:/data"
      - "/mnt:/mnt"
      - "/tmp:/tmp"
    devices: "{{ '/dev/dri:/dev/dri' if dev_dri.stat.exists == True | default(false) else omit }}"
    restart_policy: always
    etc_hosts: {'metric.plex.tv': '127.0.0.1', 'metrics.plex.tv': '127.0.0.1'}
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.15
        aliases:
          - plex
    state: started

# we need this here because sometimes after a restore, docker will set this transcodes folder to root, dont ask why, but it does...
- name: "Wait 5 seconds, then ensure {{plex.transcodes}} has the correct permissions"
  wait_for:
    timeout: 5

- name: "Ensure transcodes folder has the correct permissions"
  file:
    path: "{{plex.transcodes}}"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    recurse: true

- name: Check WebTools exists
  stat:
    path: "/opt/plex/Library/Application Support/Plex Media Server/Plug-ins/WebTools.bundle"
  register: webtools_bundle

- name: Wait for Plug-ins folder to be created by Plex
  wait_for:
    path: "/opt/plex/Library/Application Support/Plex Media Server/Plug-ins"
    state: present
  when: webtools_bundle.stat.exists == False

- name: Install WebTools
  unarchive:
    src: https://github.com/ukdtom/WebTools.bundle/releases/download/2.4.1/WebTools.bundle.zip
    dest: "/opt/plex/Library/Application Support/Plex Media Server/Plug-ins"
    copy: no
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
  when: webtools_bundle.stat.exists == False

- name : Install Unrar & Unzip
  shell : docker exec -i plex bash -c 'apt-get update && apt install unzip unrar -y'
  
  
  
