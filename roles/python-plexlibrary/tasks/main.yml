#########################################################################
# Title:         Cloudbox: Python-PlexLibrary Role                      #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create python-plexlibrary directories
  file: "path={{ item }} state=directory owner={{ user.name }} group={{ user.name }} recurse=yes"
  with_items:
    - "/opt/python-plexlibrary"

- name: Clone python-plexlibrary
  git:
    repo: "https://github.com/adamgot/python-plexlibrary.git"
    dest: "/opt/python-plexlibrary"
    version: master
    force: yes
  become: yes
  become_user: "{{ user.name }}"

- name: Install pip requirements
  pip:
    requirements: "/opt/python-plexlibrary/requirements.txt"
    executable: pip3

- name: Check config exists
  stat:
    path: "/opt/python-plexlibrary/config.yml"
  register: python_plexlibrary_config

- name: Create config from template
  copy:
    src: "/opt/python-plexlibrary/config-template.yml"
    dest: "/opt/python-plexlibrary/config.yml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: no
  when: not python_plexlibrary_config.stat.exists

- name: Add plex url to config file
  shell: |
    yyq w -i /opt/python-plexlibrary/config.yml plex.baseurl 'https://plex.{{ user.domain }}:443'
  become: yes
  become_user: "{{ user.name }}"

- name: Import Plex Auth Token role
  import_role:
    name: plex_auth_token
  when: plex_account_enabled

- name: Add plex token to config file
  shell: |
    yyq w -i /opt/python-plexlibrary/config.yml plex.token '{{ plex_auth_token }}'
  become: yes
  become_user: "{{ user.name }}"
  when: plex_account_enabled

- name: "Copy example recipes to '/opt/python-plexlibrary' folder"
  copy:
    src: "{{ item }}"
    dest: "/opt/python-plexlibrary/recipes/examples/cloudbox/"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0664
    force: yes
  with_fileglob:
    - "recipes/*.yml"

- name: "Copy 'plexlibrary.sh' to '/opt/python-plexlibrary' folder"
  copy:
    src: "plexlibrary.sh"
    dest: "/opt/python-plexlibrary/plexlibrary.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes

- name: Set 'plexlibrary.sh' as executable
  file:
    path: "/opt/python-plexlibrary/plexlibrary.sh"
    mode: a+x

- name: "Create '/usr/local/bin' symlink"
  file:
    src: "/opt/python-plexlibrary/plexlibrary.sh"
    dest: "/usr/local/bin/plexlibrary"
    state: link

- name: "Add items to '.gitignore'"
  lineinfile:
    path: "/opt/python-plexlibrary/.gitignore"
    state: present
    insertafter: EOF
    line: '{{ item }}'
  with_items:
    - "recipes/examples/cloudbox/*.yml"
    - "plexlibrary.sh"
    - "*.log"

- name: "Schedule cron task for daily update."
  cron:
    name: "Python-PlexLibrary"
    user: "{{ user.name }}"
    job: "/opt/python-plexlibrary/plexlibrary.sh"
    special_time: daily
    state: present
