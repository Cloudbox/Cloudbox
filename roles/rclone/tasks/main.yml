#########################################################################
# Title:         Cloudbox: Rclone Role                                  #
# Author(s):     L3uddz, Desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Ensure unzip is installed
  apt:
    name: unzip
    state: present


- name: Create rclone directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - "/home/{{user}}/.config"
    - "/home/{{user}}/.config/rclone"

- name: Cleanup rclone tmp path
  shell: rm -rf /tmp/rclone-*-linux-amd64
  args:
    warn: no

- name: Verify that Rclone version was specified
  set_fact:
    rclone_version_specified: "{{ true if not (
      (rclone.version is undefined)
      or
      (rclone.version is none)
      or
      (rclone.version | trim == '')
      ) else false}}"

- name: Build version tag
  set_fact: rclone_version_tag="current"
  when: not rclone_version_specified

- name: Build version tag
  set_fact: rclone_version_tag="{{ ((rclone.version == 'latest') | ternary('current', 'v{{ "%.2f"|format(rclone.version) }}')) }}"
  when: rclone_version_specified

- name: "Unarchive rclone version: {{rclone_version_tag}}"
  unarchive:
    src: "https://downloads.rclone.org/{{ '' if (rclone.version == 'latest' or not rclone_version_specified) else rclone_version_tag + '/' }}rclone-{{ rclone_version_tag }}-linux-amd64.zip"
    dest: /tmp
    copy: no
    validate_certs: no

- name: Find rclone tmp dir
  shell: ls -d /tmp/rclone-*-linux-amd64
  register: rclone_tmp_dir

- name: Copy binary to /usr/bin/rclone
  copy:
    src: "{{ rclone_tmp_dir.stdout }}/rclone"
    dest: "/usr/bin/rclone"
    mode: 0755
    owner: root
    group: root
    force: yes

- name: Make dir for local manpages
  file:
    path: '/usr/local/share/man/man1'
    state: directory
    mode: 0775
    owner: root
    group: root

- name: Copy manpage
  copy:
    src: "{{ rclone_tmp_dir.stdout }}/rclone.1"
    dest: /usr/local/share/man/man1/rclone.1
    mode: 0644
    owner: root
    group: root

- name: Install manpage
  shell: mandb
  changed_when: false

- name: Get rclone version
  shell: rclone --version | head -n 1 | awk '{ print substr($2, 2, 4) }'
  register: rclone_version
  ignore_errors: yes

- name: "Display rclone version"
  debug:
    msg: "rclone version {{rclone_version.stdout}} installed."

- name: Check if rclone.conf exists in cloudbox folder
  stat:
    path: "{{playbook_dir}}/rclone.conf"
  register: rclone_conf_playbook_dir

- name: "Move rclone.conf in cloudbox folder to default location"
  shell: "mv '{{playbook_dir}}/rclone.conf' '/home/{{user}}/.config/rclone/rclone.conf'"
  when: rclone_conf_playbook_dir.stat.exists

- name: Check if rclone.conf exists at default location
  stat:
    path: "/home/{{user}}/.config/rclone/rclone.conf"
  register: rclone_conf_default_path

- name: Do the following block when rclone.conf is not at default location
  block:

  - name: Find location of rclone.conf when not at default location
    shell: rclone config file
    register: rclone_conf_current_location

  - name: Move rclone.conf to default location if found elsewhere
    shell: "mv '{{ rclone_conf_current_location.stdout_lines | last }}' '/home/{{user}}/.config/rclone/rclone.conf'"
    when: rclone_conf_current_location.stdout.find('Configuration file doesn\'t exist') == -1

  - name: Create blank rclone.conf if not found elsewhere
    file:
      path: "/home/{{user}}/.config/rclone/rclone.conf"
      state: touch
      mode: 0775
      owner: "{{user}}"
      group: "{{user}}"
    when: rclone_conf_current_location.stdout.find('Configuration file doesn\'t exist') != -1

  when: not rclone_conf_default_path.stat.exists
