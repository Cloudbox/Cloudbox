#########################################################################
# Title:            Cloudbox: Sonarr Role                               #
# Author(s):        l3uddz, desimaniac                                  #
# URL:              https://github.com/cloudbox/cloudbox                #
# Docker Image(s):  cr.hotio.dev/hotio/sonarr,                                       #
#                   andrewkhunn/suitarr_mp4_automator                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    subdomain: sonarr
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container:
    name: sonarr
    state: absent

- name: Suitarr Migration Tasks
  import_tasks: "subtasks/suitarr_migration.yml"

- name: Create sonarr directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/sonarr

- name: Darkerr Tasks
  import_tasks: "subtasks/darkerr.yml"

- name: "Check if '/dev/dri' exists"
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: Set 'default_volumes' variable
  set_fact:
    default_volumes:
      - "/opt/sonarr:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"
      - "/mnt/unionfs/Media/TV:/tv"

- name: Create and start container
  docker_container:
    name: sonarr
    image: "cr.hotio.dev/hotio/sonarr:release"
    pull: yes
    published_ports:
      - "127.0.0.1:8989:8989"
    env:
      BACKUP: "no"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      UMASK: 002
      VIRTUAL_HOST: "sonarr.{{ user.domain }}"
      VIRTUAL_PORT: 8989
      LETSENCRYPT_HOST: "sonarr.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      TZ: "{{ tz }}"
    volumes: "{{ default_volumes + nzbs_downloads_path|default([]) + torrents_downloads_path|default([]) }}"
    devices: "{{ '/dev/dri:/dev/dri' if (gpu.intel and sickbeard_mp4_automator and dev_dri.stat.exists) | default(false) else omit }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - sonarr
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
