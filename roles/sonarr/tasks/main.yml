#########################################################################
# Title:         Cloudbox: Sonarr Role                                  #
# Author(s):     L3uddz, Desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  hotio/suitarr                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare
  vars:
    subdomain: sonarr

- name: Stop and remove any existing container
  docker_container:
    name: sonarr
    state: absent

- name: Create sonarr directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/sonarr

- name: Check subfolder1 exists
  stat:
    path: /opt/sonarr/Sonarr
  register: subfolder1

- name: Check subfolder2 exists
  stat:
    path: /opt/sonarr/app
  register: subfolder2

- name: Move 'sonarr' folder contents to 'app' subfolder
  shell: |
    mv /opt/sonarr /tmp/app
    mkdir /opt/sonarr
    mv /tmp/app /opt/sonarr/
    find /opt/sonarr/* -type d -empty -delete
    chown -R {{user}}:{{user}} /opt/sonarr
  when: not (subfolder1.stat.exists or subfolder2.stat.exists)

- name: Move 'Sonarr' subfolder to 'app' subfolder
  shell: |
    mv /opt/sonarr/Sonarr /opt/sonarr/app
    chown -R {{user}}:{{user}} /opt/sonarr
  when: (subfolder1.stat.exists) and (not subfolder2.stat.exists)

- name: Create and start container
  docker_container:
    name: sonarr
    image: "hotio/suitarr:sonarr"
    pull: yes
    published_ports:
      - "127.0.0.1:8989:8989"
    env:
      VERSION: "unstable"
      BACKUP: "no"
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      MONO_TLS_PROVIDER: legacy
      VIRTUAL_HOST: "sonarr.{{domain}}"
      VIRTUAL_PORT: 8989
      LETSENCRYPT_HOST: "sonarr.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/sonarr:/config"
      - "/mnt/unionfs/Media/TV:/tv"
      - "{{nzbget.downloads}}:/downloads/nzbget"
      - "{{rutorrent.downloads}}:/downloads/rutorrent"
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
    networks:
      - name: cloudbox
        aliases:
          - sonarr
    restart_policy: always
    state: started
