#########################################################################
# Title:            Cloudbox: Radarr Role                               #
# Author(s):        L3uddz, Desimaniac                                  #
# URL:              https://github.com/cloudbox/cloudbox                #
# Docker Image(s):  hotio/suitarr,                                      #
#                   andrewkhunn/suitarr_mp4_automator                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: radarr

- name: Stop and remove any existing container
  docker_container:
    name: radarr
    state: absent

# START - Suitarr Migration Tasks
- name: Check folder exists
  stat:
    path: /opt/radarr
  register: folder

- name: Check subfolder1 exists
  stat:
    path: /opt/radarr/Radarr
  register: subfolder1

- name: Check subfolder2 exists
  stat:
    path: /opt/radarr/app
  register: subfolder2

- name: Move 'radarr' folder contents to 'app' subfolder
  shell: |
    mv /opt/radarr /tmp/app
    mkdir /opt/radarr
    mv /tmp/app /opt/radarr/
    find /opt/radarr/* -type d -empty -delete
    chown -R {{user}}:{{user}} /opt/radarr
  when: (folder.stat.exists) and not (subfolder1.stat.exists or subfolder2.stat.exists)

- name: Move 'Radarr' subfolder to 'app' subfolder
  shell: |
    mv /opt/radarr/Radarr /opt/radarr/app
    chown -R {{user}}:{{user}} /opt/radarr
  when: (folder.stat.exists) and (subfolder1.stat.exists) and (not subfolder2.stat.exists)
# END - Suitarr Migration Tasks

- name: Create radarr directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/radarr

- name: Set 'suitarr_image' variable
  set_fact:
    suitarr_image: "{{ (sickbeard_mp4_automator | default(false,true)) | ternary('andrewkhunn/suitarr_mp4_automator','hotio/suitarr') }}"

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/radarr:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"
      - "/mnt/unionfs/Media/Movies:/movies"

- name: Create and start container
  docker_container:
    name: radarr
    image: "{{suitarr_image}}:radarr"
    pull: yes
    published_ports:
      - "127.0.0.1:7878:7878"
    env:
      VERSION: "{{suitarr.version}}"
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      UMASK: 002
      BACKUP: "no"
      MONO_TLS_PROVIDER: legacy
      VIRTUAL_HOST: "radarr.{{domain}}"
      VIRTUAL_PORT: 7878
      LETSENCRYPT_HOST: "radarr.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes: "{{ default_volumes + nzbs_downloads_path|default([]) + torrents_downloads_path|default([]) + old_nzbget_downloads_path|default([]) + old_rutorrent_downloads_path|default([]) }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - radarr
    purge_networks: yes
    restart_policy: always
    state: started
