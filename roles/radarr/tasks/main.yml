#########################################################################
# Title:         Cloudbox: Radarr Role                                  #
# Author(s):     L3uddz                                                 #
# URL:           https://github.com/Cloudbox/Cloudbox                   #
# Docker Image:  hotio/suitarr                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare
  vars:
    subdomain: radarr

- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid

- name: Stop and remove any existing container
  docker_container:
    name: radarr
    state: absent

- name: Create radarr directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/radarr

- name: Create and start container
  docker_container:
    name: radarr
    image: hotio/suitarr
    pull: yes
    published_ports:
      - "127.0.0.1:7878:7878"
    env:
      APP: "radarr"
      VERSION: "unstable"
      PUID: "{{uid.stdout}}"
      PGID: "{{gid.stdout}}"
      BACKUP: "no"
      MONO_TLS_PROVIDER: legacy
      VIRTUAL_HOST: "radarr.{{domain}}"
      VIRTUAL_PORT: 7878
      LETSENCRYPT_HOST: "radarr.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/radarr:/config"
      - "/mnt/unionfs/Media/Movies:/movies"
      - "{{nzbget.downloads}}:/downloads/nzbget"
      - "{{rutorrent.downloads}}:/downloads/rutorrent"
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
    networks:
      - name: cloudbox
        aliases:
          - radarr
    restart_policy: always
    state: started
