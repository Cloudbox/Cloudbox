#########################################################################
# Title:         Cloudbox: NZBGet Role                                  #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  hotio/nzbget                                           #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create DNS Record
  include_role:
    name: dns
  vars:
    record: nzbget

- name: Stop and remove any existing container
  docker_container:
    name: nzbget
    state: absent

- name: Suitarr Migration Tasks
  import_tasks: "subtasks/suitarr_migration.yml"

- name: Create nzbget directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }} recurse=yes"
  with_items:
    - /opt/nzbget
    - "{{ downloads.nzbs }}"
    - "{{ downloads.nzbs }}/nzbget"

- name: SMA Tasks
  block:

  - name: Create directories
    file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
    with_items:
      - /opt/nzbget/script.d

  - name: Import 'sma_req.sh' script
    copy:
      src: "{{ playbook_dir }}/roles/sickbeard_mp4_automator/files/99-sma_req.sh"
      dest: "/opt/nzbget/script.d/99-sma_req.sh"
      owner: "{{ user.name }}"
      group: "{{ user.name }}"
      mode: 0775
      force: yes

  when: (sickbeard_mp4_automator | default(false,true))

- name: Darkerr Tasks
  import_tasks: "subtasks/darkerr.yml"

- name: Check nzbget.conf exists
  stat:
    path: "/opt/nzbget/app/nzbget.conf"
  register: nzbget_conf

- name: "Check if '/dev/dri' exists"
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/opt/nzbget:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"

- name: Set 'sma_req_volume' variable
  set_fact:
    sma_req_volume:
      - "/opt/nzbget/script.d/99-sma_req.sh:/etc/cont-init.d/99-sma_req.sh"

- name: Build 'docker_volumes' list variable
  set_fact:
    docker_volumes: "{{ default_volumes + nzbs_downloads_path|default([]) }}"
  when: not (sickbeard_mp4_automator | default(false,true))

- name: Build 'docker_volumes' list variable
  set_fact:
    docker_volumes: "{{ default_volumes + nzbs_downloads_path|default([]) + sma_req_volume }}"
  when: (sickbeard_mp4_automator | default(false,true))

- name: Create and start container
  docker_container:
    name: nzbget
    image: "hotio/nzbget:unstable"
    pull: yes
    published_ports:
      - "127.0.0.1:6789:6789"
    env:
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      UMASK: 002
      VIRTUAL_HOST: "nzbget.{{ user.domain }}"
      VIRTUAL_PORT: 6789
      LETSENCRYPT_HOST: "nzbget.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      LC_ALL: "C"
      TZ: "{{ tz }}"
    volumes: "{{ docker_volumes }}"
    devices: "{{ '/dev/dri:/dev/dri' if ((gpu.intel or gpu.nvidia.enabled) and (sickbeard_mp4_automator | default(false,true)) and dev_dri.stat.exists) | default(false) else omit }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - nzbget
    purge_networks: yes
    restart_policy: unless-stopped
    state: started

- name: Scripts Task
  import_tasks: "subtasks/scripts.yml"
  when: not continuous_integration
  tags: nzbget-scripts

- name: Settings Task
  include_tasks: "subtasks/settings.yml"
  when: not (
        (nzbget_conf.stat.exists)
        or
        (continuous_integration)
    )
