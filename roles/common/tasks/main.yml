---
  - name: "Get {{user}} uid"
    shell: "id -u {{user}}"
    register: uid

  - name: "Get {{user}} gid"
    shell: "id -g {{user}}"
    register: gid

  - name: Install common packages
    apt: "name={{item}} state=installed"
    with_items:
      - unrar
      - unzip
      - p7zip
      - python-pip
      - python3-pip
      - python-passlib
      - curl
      - sqlite3
      - vnstat
      - tree
      - lsof
      - man-db
      - ksmtuned
      - git
      - pwgen
      - rsync
      - logrotate
      - htop
      - iotop
      - nload
      - fail2ban
      - ufw
      - ncdu
      - mc
      - speedtest-cli
      - python-ndg-httpsclient
      - nethogs

  - name: Install common pip modules
    pip: "name={{item}} state=latest"
    with_items:
      - docker-py
      - certbot

  - name: Install hostess
    get_url:
      url:  https://github.com/cbednarski/hostess/releases/download/v0.2.0/hostess_linux_amd64
      dest: /usr/local/bin/hostess
      mode: 0755
      owner: root
      group: root
      force: yes

  - name: Install ngrok
    unarchive:
      src: https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      dest: /usr/local/bin
      copy: no
      mode: 0775
      validate_certs: no

  - name: Create common directories
    file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
    with_items:
      - /mnt/local
      - /mnt/local/.unionfs-fuse
      - /mnt/local/Media/TV
      - /mnt/local/Media/Movies
      - /opt
      - /opt/plexdrive
      - /opt/sonarr
      - /opt/radarr
      - /opt/nzbget
      - /opt/nzbget/scripts
      - /opt/rutorrent
      - /opt/jackett
      - /opt/nzbhydra
      - /opt/plex
      - /opt/plexpy
      - /opt/plex_autoscan
      - /opt/unionfs_cleaner
      - /opt/rclone
      - /opt/nginx-proxy
      - /opt/plexrequests
      - /opt/organizr
      - /opt/portainer
      - /opt/scripts
      - /opt/scripts/torrent
      - /opt/scripts/nzb
      - /opt/scripts/nginx
      - /opt/scripts/plex
      - /opt/scripts/plex_autoscan
      - "/home/{{user}}/.config/rclone"
      - "{{plex.transcodes}}"

  - name: Check plexdrive mount folder exist
    stat:
      path: /mnt/plexdrive
    register: plexdrive_mnt

  - name: Create /mnt/plexdrive
    file:
      path: /mnt/plexdrive
      state: directory
      mode: 0755
      owner: "{{user}}"
      group: "{{user}}"
      recurse: true
    when: plexdrive_mnt.stat.exists == False

  - name: Set /opt permissions
    shell: "chmod -R 775 /opt"

  - name: Set /opt owner
    shell: "chown -R {{user}}:{{user}} /opt"
