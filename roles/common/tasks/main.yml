#########################################################################
# Title:         Cloudbox: Common Role                                  #
# Author(s):     L3uddz, Desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create common directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /mnt/local
    - /mnt/local/.unionfs-fuse
    - /mnt/local/Media
    - /mnt/local/Media/Movies
    - /mnt/local/Media/Music
    - /mnt/local/Media/TV
    - /opt
    - /home/{{user}}/logs
    - /home/{{user}}/.config
    - /home/{{user}}/.config/pip

- name: Set /opt permissions
  shell: "chmod -R ugo+X /opt"
  args:
    warn: no

- name: Set /opt ownership
  shell: "chown -R {{user}}:{{user}} /opt"
  args:
    warn: no

- name: Add multiverse repositories
  apt_repository:
    repo: "{{item}}"
    state: present
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
  register: apt_multiverse_repositories

- name: Update APT packages list
  apt:
    update_cache: yes
  when: apt_multiverse_repositories.changed

- name: Install common packages
  apt: "name={{item}} state=present"
  with_items:
    - nano
    - unzip
    - p7zip
    - curl
    - sqlite3
    - vnstat
    - tree
    - lsof
    - man-db
    - ksmtuned
    - git
    - pwgen
    - rsync
    - logrotate
    - htop
    - iotop
    - nload
    - fail2ban
    - ufw
    - ncdu
    - mc
    - speedtest-cli
    - dnsutils
    - glances
    - screen
    - tmux
    - apache2-utils
    - jq
    - lib32z1
  ignore_errors: yes

- name: Install unrar
  apt: "name={{item}} state=present"
  with_items:
    - unrar
  ignore_errors: yes

- name: Check to see if unrar installed
  stat:
    path: "/usr/bin/unrar"
  register: unrar_binary

- name: Install unrar-free if unrar was not installed
  apt: "name={{item}} state=present"
  with_items:
    - unrar-free
  ignore_errors: yes
  when: not unrar_binary.stat.exists

- name: "Import pip.conf into /home/{{user}}/.config/pip/"
  copy:
    src: "pip.conf"
    dest: "/home/{{user}}/.config/pip/pip.conf"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 775
    force: yes

- name: Install common pip modules
  pip: "name={{item}} state=latest"
  with_items:
    - passlib
    - certbot
    - ansible-toolbox
    - ndg-httpsclient
    - dnspython
    - yq
  ignore_errors: yes

- name: Set default shell
  import_role:
    name: shell
  tags: shell

- name: Install z
  import_role:
    name: z
  tags: z
  ignore_errors: yes

- name: Install nodejs
  import_role:
    name: nodejs
  tags: nodejs
  ignore_errors: yes

- name: Install hostess
  import_role:
    name: hostess
  tags: hostess
  ignore_errors: yes

- name: Install ngrok
  import_role:
    name: ngrok
  tags: ngrok
  ignore_errors: yes

- name: Install iperf3
  import_role:
    name: iperf3
  tags: iperf3
  ignore_errors: yes

- name: Install nethogs
  import_role:
    name: nethogs
  tags: nethogs
  ignore_errors: yes
