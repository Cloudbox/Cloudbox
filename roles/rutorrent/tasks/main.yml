#########################################################################
# Title:         Cloudbox: ruTorrent Role                               #
# Author(s):     L3uddz, Horjulf                                        #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  horjulf/rutorrent-autodl                               #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: rutorrent

- name: Stop and remove any existing container
  docker_container:
    name: rutorrent
    state: absent

- name: Create rutorrent directory
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - /opt/rutorrent

- name: Create new downloads directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - "{{downloads.torrents}}"
    - "{{downloads.torrents}}/rutorrent"
    - "{{downloads.torrents}}/rutorrent/completed"
    - "{{downloads.torrents}}/rutorrent/incoming"
    - "{{downloads.torrents}}/rutorrent/watched"
  when: new_downloads_settings

# This is still needed as sometimes it will remain in root.
- name: "Set {{downloads.torrents}} permissions"
  shell: "chmod -R 775 {{downloads.torrents}}"
  when: new_downloads_settings

- name: "Set {{downloads.torrents}} owner"
  shell: "chown -R {{user}}:{{user}} {{downloads.torrents}}"
  when: new_downloads_settings

- name: Create old downloads directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - "{{rutorrent.downloads}}"
  when: old_downloads_settings

# This is still needed as sometimes it will remain in root.
- name: "Set {{rutorrent.downloads}} permissions"
  shell: "chmod -R 775 {{rutorrent.downloads}}"
  when: old_downloads_settings

- name: "Set {{rutorrent.downloads}} owner"
  shell: "chown -R {{user}}:{{user}} {{rutorrent.downloads}}"
  when: old_downloads_settings

- name: Check if rtorrent.rc exists
  stat:
    path: "/opt/rutorrent/rtorrent/rtorrent.rc"
  register: rtorrent_rc

- name: Check if plugins.ini exists
  stat:
    path: "/opt/rutorrent/rutorrent/settings/plugins.ini"
  register: plugins_ini

- name: Replace plugins.ini with customized one
  copy:
    src: plugins.ini
    dest: "/opt/rutorrent/rutorrent/settings/plugins.ini"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: plugins_ini.stat.exists

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/rutorrent:/config"
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"

- name: Set new_downloads_paths variable
  set_fact:
    new_downloads_paths:
      - "{{downloads.torrents}}/rutorrent:/downloads/torrents/rutorrent"
  when: new_downloads_settings

- name: Set old_downloads_paths variable
  set_fact:
    old_downloads_paths:
      - "{{rutorrent.downloads}}:/downloads/rutorrent"
  when: old_downloads_settings

- name: Create and start container
  docker_container:
    name: rutorrent
    image: horjulf/rutorrent-autodl
    pull: yes
    published_ports:
      - "127.0.0.1:3111:80"
      - "51413:51413"
      - "6881:6881/udp"
    env:
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      VIRTUAL_HOST: "rutorrent.{{domain}}"
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: "rutorrent.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes: "{{ default_volumes + new_downloads_paths|default([]) + old_downloads_paths|default([]) }}"
    networks:
      - name: cloudbox
        aliases:
          - rutorrent
    purge_networks: yes
    restart_policy: always
    stop_timeout: 300
    state: started

- name: Settings Tweaks
  include_tasks: "rutorrent_settings.yml"
  when: not (
        (rtorrent_rc.stat.exists)
        or
        ((continuous_integration|default(false,true))|bool)
    )
