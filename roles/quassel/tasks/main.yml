#########################################################################
# Title:         Cloudbox: Quassel Role                                 #
# Author(s):     L3uddz                                                 #
# URL:           https://github.com/Cloudbox/Cloudbox                   #
# Docker Image:  linuxserver/quassel-core                               #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare
  vars:
    subdomain: quassel

- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid

- name: Stop and remove any existing container
  docker_container:
    name: quassel
    state: absent

- name: Create quassel directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/quassel
    - /opt/scripts/quassel

- name: Check clear_backlog.py exists
  stat:
    path: "/opt/scripts/quassel/clear_backlog.py"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: quassel_clear_backlog

- name: Import clear_backlog.py
  copy:
    src: "clear_backlog.py"
    dest: "/opt/scripts/quassel/clear_backlog.py"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    force: yes
  when: quassel_clear_backlog.stat.exists == False

- name: Create and start container
  docker_container:
    name: quassel
    image: linuxserver/quassel-core
    pull: yes
    published_ports:
      - "4242:4242"
    env:
      PUID: "{{uid.stdout}}"
      PGID: "{{gid.stdout}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/quassel:/config"
    restart_policy: always
    networks:
      - name: cloudbox
        aliases:
          - quassel
    state: started
