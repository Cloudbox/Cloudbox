#########################################################################
# Title:         Cloudbox: Plexdrive Role                               #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/Cloudbox/Cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check if plexdrive service exists
  stat:
    path: "/etc/systemd/system/plexdrive.service"
  register: plexdrive_service

- name: Populate Service Facts
  service_facts:
  when: plexdrive_service.stat.exists

- name: Get plexdrive service state
  set_fact:
    plexdrive_service_running: "{{ (services['plexdrive.service'] is defined) and (services['plexdrive.service']['state'] == \"running\") }}"
  when: plexdrive_service.stat.exists

- name: Stop existing plexdrive service
  systemd: state=stopped name=plexdrive
  when: plexdrive_service.stat.exists and plexdrive_service_running

- name: "Force unmount /mnt/plexdrive"
  shell: "/bin/umount -f /mnt/plexdrive 2>/dev/null || :"
  ignore_errors: yes

- name: Create plexdrive directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}} recurse=yes"
  with_items:
    - /opt/plexdrive
    - /mnt/plexdrive

- name: Install plexdrive
  get_url:
    url:  https://github.com/dweidenfeld/plexdrive/releases/download/5.0.0/plexdrive-linux-amd64
    dest: /opt/plexdrive/plexdrive
    mode: 0775
    owner: "{{user}}"
    group: "{{user}}"
    force: yes
    validate_certs: no

- name: Import plexdrive.service
  template:
    src: plexdrive.service.js2
    dest: /etc/systemd/system/plexdrive.service
    force: yes
  when: not plexdrive_service.stat.exists

- name: Systemd daemon-reload
  systemd: state=stopped name=plexdrive daemon_reload=yes enabled=no

- name: Check config exists
  stat:
    path: "/opt/plexdrive/config.json"
  register: plexdrive_config

- name: Start plexdrive service
  systemd: state=started name=plexdrive enabled=yes
  when: plexdrive_config.stat.exists
