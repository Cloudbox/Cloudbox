#########################################################################
# Title:         Cloudbox: Sanity Check Role                            #
# Author(s):     L3uddz, Desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.rocks          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Ensure system is either Ubuntu 16.04 or Ubuntu 18.04"
  fail: msg="Cloudbox is specifically designed for Ubuntu 16.04 or 18.04"
  when: ansible_distribution_version is version_compare('16.04', '!=') and ansible_distribution_version is version_compare('18.04', '!=')
  tags: always

- name: "Display System Info"
  debug:
    msg: "System is running {{ ansible_lsb.description if ansible_lsb is defined else (ansible_distribution + ' ' + ansible_distribution_version) }}."
  tags: always

- name: "Get all available tags"
  shell: ansible-playbook cloudbox.yml --list-tags 2>&1 | grep "TASK TAGS" | cut -d":" -f2 | awk '{sub(/\[/, "")sub(/\]/, "")}1' | sed -e 's/,//g' | xargs -n 1 | sort -u
  register: t
  when: not ((continuous_integration|default(false,true))|bool)
  tags: always

- name: "Ensure valid tag(s) were provided."
  assert:
    that:
      - '"{{item}}" in t.stdout_lines'
    msg: "You must supply valid tag(s) via '--tags TAG' (get a list of valid tags by running 'ansible-playbook cloudbox.yml --list-tags')"
  with_items: "{{ansible_run_tags}}"
  when: not ((continuous_integration|default(false,true))|bool)
  tags: always

- name: "Check if 'backup.lock' is present"
  stat:
    path: "{{playbook_dir}}/backup.lock"
  register: backup_lock
  tags: always

- name: "Get 'backup.lock' age."
  set_fact:
    backup_lock_age: "{{ ( (((ansible_date_time.epoch|int) - (backup_lock.stat.ctime|int)) / 3600) | int )  }}"
  when: backup_lock.stat.exists
  tags: always

- name: "Delete stale 'backup.lock'."
  file:
    path: "{{playbook_dir}}/backup.lock"
    state: absent
  when: (backup_lock.stat.exists) and (backup_lock_age >= 1)
  tags: always

- name: "Fail when 'backup.lock' exists."
  fail:
    msg: "A Backup task is currently in progress. Please wait for it to complete."
  when: (backup_lock.stat.exists) and (backup_lock_age < 1)
  tags: always
