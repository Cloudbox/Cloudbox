#########################################################################
# Title:         Cloudbox: Sonarr4K Role                                #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  hotio/suitarr                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: sonarr4k

- name: Stop and remove any existing container
  docker_container:
    name: sonarr4k
    state: absent

- name: Remove darkerr config
  file:
    path: "/opt/nginx-proxy/vhost.d/sonarr4k.{{domain}}_location"
    state: absent
  when: not (darkerr.enable | default(false,true))

# START - Suitarr Migration Tasks
- name: Check folder exists
  stat:
    path: /opt/sonarr4k
  register: folder

- name: Check subfolder1 exists
  stat:
    path: /opt/sonarr4k/Sonarr
  register: subfolder1

- name: Check subfolder2 exists
  stat:
    path: /opt/sonarr4k/app
  register: subfolder2

- name: Move 'sonarr4k' folder contents to 'app' subfolder
  shell: |
    mv /opt/sonarr4k /tmp/app
    mkdir /opt/sonarr4k
    mv /tmp/app /opt/sonarr4k/
    find /opt/sonarr4k/* -type d -empty -delete
    chown -R {{user}}:{{user}} /opt/sonarr4k
  when: (folder.stat.exists) and not (subfolder1.stat.exists or subfolder2.stat.exists)

- name: Move 'Sonarr' subfolder to 'app' subfolder
  shell: |
    mv /opt/sonarr4k/Sonarr /opt/sonarr4k/app
    chown -R {{user}}:{{user}} /opt/sonarr4k
  when: (folder.stat.exists) and (subfolder1.stat.exists) and (not subfolder2.stat.exists)
# END - Suitarr Migration Tasks

- name: Create sonarr4k directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/sonarr4k

- name: Add darkerr config
  copy:
    src: "darkerr-nginx-conf"
    dest: "/opt/nginx-proxy/vhost.d/sonarr4k.{{domain}}_location"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0664
    force: yes
  when: (darkerr.enable | default(false,true))

- name: Set default_volumes variable
  set_fact:
    default_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/sonarr4k:/config"
      - "/opt/scripts:/scripts"
      - "/mnt:/mnt"
      - "/mnt/unionfs/Media/TV:/tv"

- name: Create and start container
  docker_container:
    name: sonarr4k
    image: "hotio/suitarr:sonarr"
    pull: yes
    published_ports:
      - "127.0.0.1:8990:8989"
    env:
      VERSION: "{{suitarr.version}}"
      FALLBACK: "yes"
      BACKUP: "no"
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      UMASK: 002
      MONO_TLS_PROVIDER: legacy
      VIRTUAL_HOST: "sonarr4k.{{domain}}"
      VIRTUAL_PORT: 8989
      LETSENCRYPT_HOST: "sonarr4k.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes: "{{ default_volumes + nzbs_downloads_path|default([]) + torrents_downloads_path|default([]) + old_nzbget_downloads_path|default([]) + old_rutorrent_downloads_path|default([]) }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - sonarr4k
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
